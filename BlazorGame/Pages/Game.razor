@page "/"
@implements IDisposable
@using BlazorGame.Components

@if (_gameState == null)
{
    <h3>Start a new game</h3>
    <JoinGame OnJoinedGame="OnJoinGame"></JoinGame>
}
else
{
    <h1>Game Code: @_gameState.PinCode</h1>
    <button type="button" class="btn btn-warning mb-2" @onclick="OnLeaveGame">Leave Game</button>

    if (_gameState.Hands.Any())
    {
        <h3>Players</h3>
        <table class="table table-sm">
            <thead>
                <tr class="row">
                    <th scope="col" class="col-sm-4">Player</th>
                    <th scope="col" class="col-sm-8">Hand</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var hand in _gameState.Hands)
                {
                    <tr class="row">
                        <td class="col-sm-4">

                            @if (hand.UserId == _gameState.ActivePlayerId)
                            {
                                <strong>@hand.Name</strong> <small class="font-italic">(playing)</small>
                            }
                            else
                            {
                                @hand.Name
                            }
                        </td>
                        <td class="col-sm-8">
                            <ul class="list-inline" id="hand_@hand.UserId">
                                @foreach (var card in hand.Cards)
                                {
                                    <li class="list-inline-item">
                                        <PlayingCard Value="@card" OnCardClicked="OnCardClicked"></PlayingCard>
                                    </li>

                                }
                            </ul>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        if (!_gameState.HasDealtCards)
        {
            <button type="button" @onclick="OnDealCards" class="mt-5 btn btn-info">Deal</button>
        }

        <div class="d-flex justify-content-center mt-5">
            @if (_gameState.UpCard?.Card is not null && !string.IsNullOrEmpty(_gameState.UpCard.Player))
            {
                <div class="card text-center" style="width: 18rem;">
                    <div class="card-body">
                        <PlayingCard Value="@_gameState.UpCard.Card"></PlayingCard>
                    </div>
                    <div class="card-footer text-muted">
                        <em>Played by @_gameState.UpCard.Player</em>
                    </div>
                </div>
            }

            @if (_gameState.MatchingCard?.Card is not null && !string.IsNullOrEmpty(_gameState.MatchingCard.Player))
            {
                <div class="card text-center" style="width: 18rem;">
                    <div class="card-body">
                        <PlayingCard Value="@_gameState.MatchingCard.Card"></PlayingCard>
                    </div>
                    <div class="card-footer text-muted">
                        @if (!string.IsNullOrEmpty(_gameState.MatchingCard?.Player))
                        {
                            <em>Played by @_gameState.MatchingCard?.Player</em>
                        }
                    </div>
                </div>
            }


        </div>

        if (_gameState.CanPlayNextCard)
        {
            <div class="text-center">
                <button type="button" @onclick="OnPlayNext" class="mt-5 btn btn-info">Play Next Card</button>
            </div>
        }

    }
}
